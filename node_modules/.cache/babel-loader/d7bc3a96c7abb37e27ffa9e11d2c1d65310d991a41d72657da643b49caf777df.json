{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caro\\\\Documents\\\\QuizProjet\\\\solutions\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [roundId, setRoundId] = useState('');\n  const getQuestions = async () => {\n    const response = await axios.get(`localhost:8000/quiz_rounds/${roundId}/questions/`);\n    setQuestions(response.data);\n  };\n  const handleOptionChange = (questionId, event) => {\n    const selectedAnswer = event.target.value;\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: selectedAnswer\n    });\n  };\n  const handleSaveAnswers = async () => {\n    for (const questionId in selectedAnswers) {\n      const selectedAnswer = selectedAnswers[questionId];\n      await axios.put(`/quiz_rounds/${roundId}/questions/${questionId}`, {\n        correct_answer: selectedAnswer\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter round ID\",\n      onChange: event => setRoundId(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getQuestions,\n      children: \"Get Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question \", question.question_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"A\",\n          checked: selectedAnswers[question.id] === 'A',\n          onChange: event => handleOptionChange(question.id, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), \"A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"B\",\n          checked: selectedAnswers[question.id] === 'B',\n          onChange: event => handleOptionChange(question.id, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), \"B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"C\",\n          checked: selectedAnswers[question.id] === 'C',\n          onChange: event => handleOptionChange(question.id, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), \"C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"D\",\n          checked: selectedAnswers[question.id] === 'D',\n          onChange: event => handleOptionChange(question.id, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), \"D\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveAnswers,\n      children: \"Save Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"Lswq/oIgm53VehtxKzMdpWdOK2o=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","axios","Quiz","questions","setQuestions","selectedAnswers","setSelectedAnswers","roundId","setRoundId","getQuestions","response","get","data","handleOptionChange","questionId","event","selectedAnswer","target","value","handleSaveAnswers","put","correct_answer","map","question","question_number","id"],"sources":["C:/Users/Caro/Documents/QuizProjet/solutions/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Quiz = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selectedAnswers, setSelectedAnswers] = useState({});\r\n  const [roundId, setRoundId] = useState('');\r\n\r\n  const getQuestions = async () => {\r\n    const response = await axios.get(`localhost:8000/quiz_rounds/${roundId}/questions/`);\r\n    setQuestions(response.data);\r\n  };\r\n\r\n  const handleOptionChange = (questionId, event) => {\r\n    const selectedAnswer = event.target.value;\r\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: selectedAnswer });\r\n  };\r\n\r\n  const handleSaveAnswers = async () => {\r\n    for (const questionId in selectedAnswers) {\r\n      const selectedAnswer = selectedAnswers[questionId];\r\n      await axios.put(`/quiz_rounds/${roundId}/questions/${questionId}`, {\r\n        correct_answer: selectedAnswer\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder=\"Enter round ID\" onChange={event => setRoundId(event.target.value)} />\r\n      <button onClick={getQuestions}>Get Questions</button>\r\n      {questions.map(question => (\r\n        <div key={question.id}>\r\n          <h3>Question {question.question_number}</h3>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"A\"\r\n              checked={selectedAnswers[question.id] === 'A'}\r\n              onChange={event => handleOptionChange(question.id, event)}\r\n            />\r\n            A\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"B\"\r\n              checked={selectedAnswers[question.id] === 'B'}\r\n              onChange={event => handleOptionChange(question.id, event)}\r\n            />\r\n            B\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"C\"\r\n              checked={selectedAnswers[question.id] === 'C'}\r\n              onChange={event => handleOptionChange(question.id, event)}\r\n            />\r\n            C\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"D\"\r\n              checked={selectedAnswers[question.id] === 'D'}\r\n              onChange={event => handleOptionChange(question.id, event)}\r\n            />\r\n            D\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSaveAnswers}>Save Answers</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}