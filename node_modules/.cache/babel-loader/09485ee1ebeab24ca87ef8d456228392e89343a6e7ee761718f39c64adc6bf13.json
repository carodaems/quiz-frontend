{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caro\\\\Documents\\\\QuizFrontend\\\\solutions\\\\src\\\\components\\\\Multiple.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [\"A\", \"B\", \"C\", \"D\"];\nfunction QuizAnswers() {\n  _s();\n  const [questions, setQuestions] = useState([{\n    question: \"Question 1\",\n    correctAnswer: \"\"\n  }]);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const handleChange = (questionIndex, correctAnswer) => {\n    setQuestions(prevQuestions => prevQuestions.map((question, index) => {\n      if (index === questionIndex) {\n        return {\n          ...question,\n          correctAnswer: correctAnswer\n        };\n      }\n      return question;\n    }));\n  };\n  const addQuestion = () => {\n    setQuestions(prevQuestions => [...prevQuestions, {\n      question: `Question ${prevQuestions.length + 1}`,\n      correctAnswer: \"\"\n    }]);\n  };\n  const onSubmit = async data => {\n    await axios.post(\"http://localhost:8000/quiz_rounds/1/answers/multiple\", {\n      answers: questions\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question-${index}`,\n          value: option,\n          onChange: e => handleChange(index, e.target.value),\n          checked: question.correctAnswer === option,\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), option]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizAnswers, \"fR4d7m7Z6icCDBjqvoByM+3bQSo=\", false, function () {\n  return [useForm];\n});\n_c = QuizAnswers;\nexport default QuizAnswers;\nvar _c;\n$RefreshReg$(_c, \"QuizAnswers\");","map":{"version":3,"names":["React","useState","useForm","axios","options","QuizAnswers","questions","setQuestions","question","correctAnswer","register","handleSubmit","handleChange","questionIndex","prevQuestions","map","index","addQuestion","length","onSubmit","data","post","answers","option","e","target","value"],"sources":["C:/Users/Caro/Documents/QuizFrontend/solutions/src/components/Multiple.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\n\r\nconst options = [\"A\", \"B\", \"C\", \"D\"];\r\n\r\nfunction QuizAnswers() {\r\n  const [questions, setQuestions] = useState([\r\n    { question: \"Question 1\", correctAnswer: \"\" },\r\n  ]);\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const handleChange = (questionIndex, correctAnswer) => {\r\n    setQuestions((prevQuestions) =>\r\n      prevQuestions.map((question, index) => {\r\n        if (index === questionIndex) {\r\n          return { ...question, correctAnswer: correctAnswer };\r\n        }\r\n        return question;\r\n      })\r\n    );\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setQuestions((prevQuestions) => [\r\n      ...prevQuestions,\r\n      { question: `Question ${prevQuestions.length + 1}`, correctAnswer: \"\" },\r\n    ]);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    await axios.post(\"http://localhost:8000/quiz_rounds/1/answers/multiple\", {\r\n      answers: questions\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {questions.map((question, index) => (\r\n        <div key={index}>\r\n          <p>{question.question}</p>\r\n          {options.map((option) => (\r\n            <label key={option}>\r\n              <input\r\n                type=\"radio\"\r\n                name={`question-${index}`}\r\n                value={option}\r\n                onChange={(e) => handleChange(index, e.target.value)}\r\n                checked={question.correctAnswer === option}\r\n                ref={register}\r\n              />\r\n              {option}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button type=\"button\" onClick={addQuestion}>\r\n        Add Question\r\n      </button>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default QuizAnswers;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAEpC,SAASC,WAAW,GAAG;EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CACzC;IAAEO,QAAQ,EAAE,YAAY;IAAEC,aAAa,EAAE;EAAG,CAAC,CAC9C,CAAC;EACF,MAAM;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAGT,OAAO,EAAE;EAE5C,MAAMU,YAAY,GAAG,CAACC,aAAa,EAAEJ,aAAa,KAAK;IACrDF,YAAY,CAAEO,aAAa,IACzBA,aAAa,CAACC,GAAG,CAAC,CAACP,QAAQ,EAAEQ,KAAK,KAAK;MACrC,IAAIA,KAAK,KAAKH,aAAa,EAAE;QAC3B,OAAO;UAAE,GAAGL,QAAQ;UAAEC,aAAa,EAAEA;QAAc,CAAC;MACtD;MACA,OAAOD,QAAQ;IACjB,CAAC,CAAC,CACH;EACH,CAAC;EAED,MAAMS,WAAW,GAAG,MAAM;IACxBV,YAAY,CAAEO,aAAa,IAAK,CAC9B,GAAGA,aAAa,EAChB;MAAEN,QAAQ,EAAG,YAAWM,aAAa,CAACI,MAAM,GAAG,CAAE,EAAC;MAAET,aAAa,EAAE;IAAG,CAAC,CACxE,CAAC;EACJ,CAAC;EAED,MAAMU,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC/B,MAAMjB,KAAK,CAACkB,IAAI,CAAC,sDAAsD,EAAE;MACvEC,OAAO,EAAEhB;IACX,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEK,YAAY,CAACQ,QAAQ,CAAE;IAAA,WACpCb,SAAS,CAACS,GAAG,CAAC,CAACP,QAAQ,EAAEQ,KAAK,kBAC7B;MAAA,wBACE;QAAA,UAAIR,QAAQ,CAACA;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,EACzBJ,OAAO,CAACW,GAAG,CAAEQ,MAAM,iBAClB;QAAA,wBACE;UACE,IAAI,EAAC,OAAO;UACZ,IAAI,EAAG,YAAWP,KAAM,EAAE;UAC1B,KAAK,EAAEO,MAAO;UACd,QAAQ,EAAGC,CAAC,IAAKZ,YAAY,CAACI,KAAK,EAAEQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UACrD,OAAO,EAAElB,QAAQ,CAACC,aAAa,KAAKc,MAAO;UAC3C,GAAG,EAAEb;QAAS;UAAA;UAAA;UAAA;QAAA,QACd,EACDa,MAAM;MAAA,GATGA,MAAM;QAAA;QAAA;QAAA;MAAA,QAWnB,CAAC;IAAA,GAdMP,KAAK;MAAA;MAAA;MAAA;IAAA,QAgBhB,CAAC,eACF;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAEC,WAAY;MAAA,UAAC;IAE5C;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEX;AAAC,GAxDQZ,WAAW;EAAA,QAIiBH,OAAO;AAAA;AAAA,KAJnCG,WAAW;AA0DpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}